
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( linprog )
Loading required package: lpSolve
> 
> ## Example 1
> ## Steinhauser, Langbehn and Peters (1992)
> cvec <- c(1800, 600, 600)  # gross margins
> names(cvec) <- c("Cows","Bulls","Pigs")
> bvec <- c(40, 90, 2500)  # endowment
> names(bvec) <- c("Land","Stable","Labor")
> Amat <- rbind( c(  0.7,   0.35,   0 ),
+                c(  1.5,   1,      3 ),
+                c( 50,    12.5,   20 ) )
> result1a <- solveLP( cvec, bvec, Amat, TRUE )
> print( result1a )


Results of Linear Programming / Linear Optimization

Objective function (Maximum):
[1] 93600

Iterations in phase 1: 0
Iterations in phase 2: 2

Basic Variables
        opt
Cows   44.0
Bulls  24.0
S Land  0.8

Constraints
        max actual diff dual price dual.reg
Land     40   39.2  0.8        0.0      0.8
Stable   90   90.0  0.0      240.0     15.0
Labor  2500 2500.0  0.0       28.8   1375.0

All Variables (including slack variables)
          opt    c min c    max c  marg. marg.reg.
Cows     44.0 1800   900 2400.000     NA        NA
Bulls    24.0  600   450 1200.000     NA        NA
Pigs      0.0  600  -Inf 1296.000 -696.0      6.25
S Land    0.8    0    NA  731.092    0.0      0.80
S Stable  0.0    0    NA       NA -240.0     15.00
S Labor   0.0    0    NA       NA  -28.8   1375.00

> # print all elements of the returned object
> print.default( result1a )
$opt
[1] 93600

$iter1
[1] 0

$iter2
[1] 2

$solution
 Cows Bulls  Pigs 
   44    24     0 

$basvar
        opt
Cows   44.0
Bulls  24.0
S Land  0.8

$con
        max actual diff dual price dual.reg
Land     40   39.2  0.8        0.0      0.8
Stable   90   90.0  0.0      240.0     15.0
Labor  2500 2500.0  0.0       28.8   1375.0

$allvar
          opt    c min c     max c  marg. marg.reg.
Cows     44.0 1800   900 2400.0000     NA        NA
Bulls    24.0  600   450 1200.0000     NA        NA
Pigs      0.0  600  -Inf 1296.0000 -696.0      6.25
S Land    0.8    0    NA  731.0924    0.0      0.80
S Stable  0.0    0    NA        NA -240.0     15.00
S Labor   0.0    0    NA        NA  -28.8   1375.00

$maximum
[1] TRUE

$Tab
      Cows Bulls    Pigs S Land S Stable S Labor      P0
Land     0     0  -0.952      1    -0.28 -0.0056     0.8
Bulls    0     1   3.840      0     1.60 -0.0480    24.0
Cows     1     0  -0.560      0    -0.40  0.0320    44.0
Z-C      0     0 696.000      0   240.00 28.8000 93600.0

$lpSolve
[1] FALSE

attr(,"class")
[1] "solveLP"
> 
> # estimation with verbose = TRUE
> result1b <- solveLP( cvec, bvec, Amat, TRUE, verbose = TRUE )
          Cows   Bulls Pigs S Land S Stable S Labor   P0
Land       0.7    0.35    0      1        0       0   40
Stable     1.5    1.00    3      0        1       0   90
Labor     50.0   12.50   20      0        0       1 2500
Z-C    -1800.0 -600.00 -600      0        0       0    0

Pivot Column: 1 ( Cows )
Pivot Row: 3 ( Labor )

       Cows    Bulls   Pigs S Land S Stable S Labor    P0
Land      0    0.175  -0.28      1        0  -0.014     5
Stable    0    0.625   2.40      0        1  -0.030    15
Cows      1    0.250   0.40      0        0   0.020    50
Z-C       0 -150.000 120.00      0        0  36.000 90000

Pivot Column: 2 ( Bulls )
Pivot Row: 2 ( Stable )

      Cows Bulls    Pigs S Land S Stable S Labor      P0
Land     0     0  -0.952      1    -0.28 -0.0056     0.8
Bulls    0     1   3.840      0     1.60 -0.0480    24.0
Cows     1     0  -0.560      0    -0.40  0.0320    44.0
Z-C      0     0 696.000      0   240.00 28.8000 93600.0
> all.equal( result1a, result1b )
[1] TRUE
> 
> # estimation with lpSolve
> result1c <- solveLP( cvec, bvec, Amat, TRUE, lpSolve = TRUE, verbose = TRUE )
> print( result1c )


Results of Linear Programming / Linear Optimization

Objective function (Maximum):
[1] 93600

Iterations in phase 1: 
Iterations in phase 2: 

Basic Variables
NULL

Constraints
NULL

All Variables (including slack variables)
NULL

> 
> 
> ## Example 2
> ## example 1.1.3 of Witte, Deppe and Born (1975)
> cvec <- c(2.5, 2 )  # prices of feed
> names(cvec) <- c("Feed1","Feed2")
> bvec <- c( -10, -1.5, 12)
> names(bvec) <- c("Protein","Fat","Fibre")
> Amat <- rbind( c(-1.6,-2.4 ),
+                c(-0.5,-0.2 ),
+                c( 2.0, 2.0 ) )
> result2a <- solveLP( cvec, bvec, Amat )
> print( result2a )


Results of Linear Programming / Linear Optimization

Objective function (Minimum):
[1] 10.4545

Iterations in phase 1: 3
Iterations in phase 2: 1

Basic Variables
            opt
Feed1   1.81818
Feed2   2.95455
S Fibre 2.45455

Constraints
          max    actual    diff dual price dual.reg
Protein -10.0 -10.00000 0.00000  -0.568182  3.60000
Fat      -1.5  -1.50000 0.00000  -3.181818  1.35000
Fibre    12.0   9.54545 2.45455   0.000000  2.45455

All Variables (including slack variables)
              opt   c   min c    max c    marg. marg.reg.
Feed1     1.81818 2.5 1.33333 5.000000       NA        NA
Feed2     2.95455 2.0 1.00000 3.750000       NA        NA
S Protein 0.00000 0.0      NA       NA 0.568182   3.60000
S Fat     0.00000 0.0      NA       NA 3.181818   1.35000
S Fibre   2.45455 0.0    -Inf 0.833333 0.000000   2.45455

> # print all elements of the returned object
> print.default( result2a )
$opt
[1] 10.45455

$iter1
[1] 3

$iter2
[1] 1

$solution
   Feed1    Feed2 
1.818182 2.954545 

$basvar
             opt
Feed1   1.818182
Feed2   2.954545
S Fibre 2.454545

$con
          max     actual     diff dual price dual.reg
Protein -10.0 -10.000000 0.000000 -0.5681818 3.600000
Fat      -1.5  -1.500000 0.000000 -3.1818182 1.350000
Fibre    12.0   9.545455 2.454545  0.0000000 2.454545

$allvar
               opt   c    min c     max c     marg. marg.reg.
Feed1     1.818182 2.5 1.333333 5.0000000        NA        NA
Feed2     2.954545 2.0 1.000000 3.7500000        NA        NA
S Protein 0.000000 0.0       NA        NA 0.5681818  3.600000
S Fat     0.000000 0.0       NA        NA 3.1818182  1.350000
S Fibre   2.454545 0.0     -Inf 0.8333333 0.0000000  2.454545

$maximum
[1] FALSE

$Tab
        Feed1 Feed2  S Protein     S Fat S Fibre           
Feed2       0     1 -0.5681818  1.818182       0   2.954545
Feed1       1     0  0.2272727 -2.727273       0   1.818182
S Fibre     0     0  0.6818182  1.818182       1   2.454545
Z-C         0     0  0.5681818  3.181818       0 -10.454545

$lpSolve
[1] FALSE

attr(,"class")
[1] "solveLP"
> 
> # estimation with verbose = TRUE
> result2b <- solveLP( cvec, bvec, Amat, verbose = TRUE )
        Feed1 Feed2 S Protein S Fat S Fibre    P0
Protein  -1.6  -2.4         1     0       0 -10.0
Fat      -0.5  -0.2         0     1       0  -1.5
Fibre     2.0   2.0         0     0       1  12.0
Z-C       2.5   2.0         0     0       0   0.0
          Feed1 Feed2 S Protein S Fat S Fibre M Protein M Fat    P0
M Protein   1.6   2.4        -1     0       0         1     0  10.0
M Fat       0.5   0.2         0    -1       0         0     1   1.5
Fibre       2.0   2.0         0     0       1         0     0  12.0
Z-C         2.5   2.0         0     0       0         0     0   0.0
M Z-C      -2.1  -2.6         1     1       0         0     0 -11.5

Pivot Column: 2 ( Feed2 )
Pivot Row: 1 ( M Protein )

           Feed1 Feed2   S Protein S Fat S Fibre   M Protein M Fat         P0
Feed2  0.6666667     1 -0.41666667     0       0  0.41666667     0  4.1666667
M Fat  0.3666667     0  0.08333333    -1       0 -0.08333333     1  0.6666667
Fibre  0.6666667     0  0.83333333     0       1 -0.83333333     0  3.6666667
Z-C    1.1666667     0  0.83333333     0       0 -0.83333333     0 -8.3333333
M Z-C -0.3666667     0 -0.08333333     1       0  1.08333333     0 -0.6666667

Pivot Column: 1 ( Feed1 )
Pivot Row: 2 ( M Fat )

      Feed1 Feed2     S Protein         S Fat S Fibre  M Protein     M Fat
Feed2     0     1 -5.681818e-01  1.818182e+00       0  0.5681818 -1.818182
Feed1     1     0  2.272727e-01 -2.727273e+00       0 -0.2272727  2.727273
Fibre     0     0  6.818182e-01  1.818182e+00       1 -0.6818182 -1.818182
Z-C       0     0  5.681818e-01  3.181818e+00       0 -0.5681818 -3.181818
M Z-C     0     0 -1.804112e-16  4.440892e-16       0  1.0000000  1.000000
                 P0
Feed2  2.954545e+00
Feed1  1.818182e+00
Fibre  2.454545e+00
Z-C   -1.045455e+01
M Z-C  1.110223e-16

Pivot Column: 3 ( S Protein )
Pivot Row: 3 ( Fibre )

          Feed1 Feed2 S Protein         S Fat       S Fibre M Protein     M Fat
Feed2         0     1         0  3.333333e+00  8.333333e-01         0 -3.333333
Feed1         1     0         0 -3.333333e+00 -3.333333e-01         0  3.333333
S Protein     0     0         1  2.666667e+00  1.466667e+00        -1 -2.666667
Z-C           0     0         0  1.666667e+00 -8.333333e-01         0 -1.666667
M Z-C         0     0         0  9.251859e-16  2.646032e-16         1  1.000000
                     P0
Feed2      5.000000e+00
Feed1      1.000000e+00
S Protein  3.600000e+00
Z-C       -1.250000e+01
M Z-C      7.605028e-16
          Feed1 Feed2 S Protein     S Fat    S Fibre      
Feed2         0     1         0  3.333333  0.8333333   5.0
Feed1         1     0         0 -3.333333 -0.3333333   1.0
S Protein     0     0         1  2.666667  1.4666667   3.6
Z-C           0     0         0  1.666667 -0.8333333 -12.5

Pivot Column: 5 ( S Fibre )
Pivot Row: 3 ( S Protein )

        Feed1 Feed2  S Protein     S Fat S Fibre           
Feed2       0     1 -0.5681818  1.818182       0   2.954545
Feed1       1     0  0.2272727 -2.727273       0   1.818182
S Fibre     0     0  0.6818182  1.818182       1   2.454545
Z-C         0     0  0.5681818  3.181818       0 -10.454545
> all.equal( result1a, result1b )
[1] TRUE
> 
> # estimation with lpSolve
> result2c <- solveLP( cvec, bvec, Amat, lpSolve = TRUE, verbose = TRUE )
> print( result2c )


Results of Linear Programming / Linear Optimization

Objective function (Minimum):
[1] 10.4545

Iterations in phase 1: 
Iterations in phase 2: 

Basic Variables
NULL

Constraints
NULL

All Variables (including slack variables)
NULL

> 
> 
